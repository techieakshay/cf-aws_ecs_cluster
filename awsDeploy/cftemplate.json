{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template to create an ECS Cluster with a custom security group",
  
    "Parameters": {
      "VpcId": {
        "Description": "The VPC ID where the ECS cluster will be created",
        "Type": "String",
        "Default" : "vpc-026a3605217f29788"
      },
      "ClusterName": {
        "Description": "TName of ecs cluster",
        "Type": "String",
        "Default" : "appecscluster"
      },
      "InstanceType": {
        "Description": "EC2 instance type for the ECS cluster",
        "Type": "String",
        "Default": "t2.micro",
        "AllowedValues": [
          "t2.micro",
          "t3.micro",
          "t2.small",
          "t3.small"
        ],
        "ConstraintDescription": "must be a valid EC2 instance type."
      },
      "KeyName": {
        "Description": "The EC2 KeyPair for SSH access",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription": "must be an existing EC2 KeyPair.",
        "Default" : "appecsclusterkey"
      },
      "SubnetIds": {
        "Description": "The Subnet IDs where the EC2 instances will be placed",
        "Type": "List<AWS::EC2::Subnet::Id>",
        "Default" : "subnet-063f5ebf040c9ac55,subnet-00b8ac669e7b8bc25,subnet-0e0ca2a7e889c65af,subnet-008dcb0952a81837f,subnet-07483cbd7bfbccec0"
      },
      "ScheduledActionUp": {
        "Description": "Schedule Action to bring up the instance",
        "Type": "String",
        "Default" : "false"
      },
      "ScheduledActionDown": {
        "Description": "Schedule Action to bring down the instance",
        "Type": "String",
        "Default" : "true"
      }
    },
    "Conditions": {
        "CreateScheduleDownAction": {
            "Fn::Equals": [
                {
                    "Ref": "ScheduledActionDown"
                },
                "true"
            ]
        },
        "CreateScheduleUpAction": {
            "Fn::Equals": [
                {
                    "Ref": "ScheduledActionUp"
                },
                "true"
            ]
        }
    },
    "Resources": {
        "ECSCluster": {
          "Type": "AWS::ECS::Cluster",
          "Properties": {
            "ClusterName": "MyEC2ECSCluster"
          }
        },
    
        "ECSSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "Security group for ECS EC2 instances",
            "VpcId": {
              "Ref": "VpcId"
            },
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": 80,
                "ToPort": 80,
                "CidrIp": "0.0.0.0/0"
              },
              {
                "IpProtocol": "tcp",
                "FromPort": 443,
                "ToPort": 443,
                "CidrIp": "0.0.0.0/0"
              }
            ]
          }
        },
    
        "ECSRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ec2.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "AmazonEC2ContainerServiceforEC2Role",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ecs:CreateCluster",
                        "ecs:DeregisterContainerInstance",
                        "ecs:DiscoverPollEndpoint",
                        "ecs:Poll",
                        "ecs:RegisterContainerInstance",
                        "ecs:StartTelemetrySession",
                        "ecs:UpdateContainerInstancesState",
                        "ecs:Submit*",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        },
    
        "InstanceProfile": {
          "Type": "AWS::IAM::InstanceProfile",
          "Properties": {
            "Path": "/",
            "Roles": [
              {
                "Ref": "ECSRole"
              }
            ]
          }
        },
    
        "ECSLaunchConfiguration": {
          "Type": "AWS::AutoScaling::LaunchConfiguration",
          "Properties": {
            "ImageId": {
              "Fn::FindInMap": [
                "AWSRegionToAMI",
                {
                  "Ref": "AWS::Region"
                },
                "AMI"
              ]
            },
            "InstanceType": {
              "Ref": "InstanceType"
            },
            "IamInstanceProfile": {
              "Ref": "InstanceProfile"
            },
            "KeyName": {
              "Ref": "KeyName"
            },
            "SecurityGroups": [
              {
                "Ref": "ECSSecurityGroup"
              }
            ],
            "UserData": {
              "Fn::Base64": {
                "Fn::Sub": "#!/bin/bash\necho ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config"
              }
            }
          }
        },
    
        "ECSAutoScalingGroup": {
          "Type": "AWS::AutoScaling::AutoScalingGroup",
          "Properties": {
            "VPCZoneIdentifier": {
              "Ref": "SubnetIds"
            },
            "LaunchConfigurationName": {
              "Ref": "ECSLaunchConfiguration"
            },
            "MinSize": "1",
            "MaxSize": "3",
            "DesiredCapacity": "1"
          }
        },
        "ScheduledActionStopResource": {
            "Type": "AWS::AutoScaling::ScheduledAction",
            "Condition": "CreateScheduleDownAction",
            "Properties": {
              "AutoScalingGroupName": {
                "Ref": "ECSAutoScalingGroup"
              },
              "DesiredCapacity": "0",
              "Recurrence": "0 18 * * *",  
              "MinSize": "0",
              "MaxSize": "0"
            }
          },
          "ScheduledActionUpResource": {
            "Type": "AWS::AutoScaling::ScheduledAction",
            "Condition": "CreateScheduleUpAction",
            "Properties": {
              "AutoScalingGroupName": {
                "Ref": "ECSAutoScalingGroup"
              },
              "DesiredCapacity": "0",
              "Recurrence": "0 5 * * *",  
              "MinSize": "1",
              "MaxSize": "1"
            }
          }
      },
    
      "Mappings": {
        "AWSRegionToAMI": {
          "us-east-1": {
            "AMI": "ami-0de53d8956e8dcf80"  
          },
          "us-west-2": {
            "AMI": "ami-07c1207a9d40bc3bd" 
          }
        }
      },
    
      "Outputs": {
        "ClusterName": {
          "Description": "The name of the ECS Cluster",
          "Value": {
            "Ref": "ECSCluster"
          }
        },
        "SecurityGroupId": {
          "Description": "The ID of the ECS Security Group",
          "Value": {
            "Ref": "ECSSecurityGroup"
          }
        }
      }
  }